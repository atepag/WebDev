{"ast":null,"code":"var _jsxFileName = \"/Users/a3506/Documents/WebDev/Map/WebDev/covid_map/src/App.js\";\nimport React, { useState } from \"react\";\nimport { GoogleMap, withScriptjs, withGoogleMap, InfoWindow, Marker } from \"react-google-maps\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cases: []\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.data();\n  }\n\n  data() {\n    fetch(\"https://opendata.arcgis.com/datasets/bbb2e4f589ba40d692fab712ae37b9ac_1.geojson\").then(response => response.json()).then(responseJson => this.setState({\n      cases: responseJson.features\n    }) // jsonData is parsed json object received from url\n    );\n    console.log(this.state.cases);\n  }\n\n  Map() {\n    const [selectedCity, setSelectedCity] = useState(null);\n    return /*#__PURE__*/React.createElement(GoogleMap, {\n      defaultZoom: 3,\n      defaultCenter: {\n        lat: 0,\n        lng: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, this.state.cases.map(cases => /*#__PURE__*/React.createElement(Marker, {\n      key: cases.properties.OBJECTID,\n      position: {\n        lat: cases.properties.Lat,\n        lng: cases.properties.Long_\n      },\n      onClick: () => {\n        setSelectedCity(cases);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    })), selectedCity && /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: selectedCity.properties.Lat,\n        lng: selectedCity.properties.Long_\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"city details\")));\n  }\n\n  render() {\n    const WrappedMap = withScriptjs(withGoogleMap(Map()));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        width: \"100vw\",\n        height: \"100vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(WrappedMap, {\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDnwT8wbcgGl3mz0qhqb4dJpdHl6k-D--4\",\n      loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }),\n      containerElement: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 31\n        }\n      }),\n      mapElement: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    })), document.getElementById(\"root\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a3506/Documents/WebDev/Map/WebDev/covid_map/src/App.js"],"names":["React","useState","GoogleMap","withScriptjs","withGoogleMap","InfoWindow","Marker","App","Component","constructor","state","cases","UNSAFE_componentWillMount","data","fetch","then","response","json","responseJson","setState","features","console","log","Map","selectedCity","setSelectedCity","lat","lng","map","properties","OBJECTID","Lat","Long_","render","WrappedMap","width","height","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,SADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,UAJF,EAKEC,MALF,QAMO,mBANP;;AAQA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDC,EAAAA,yBAAyB,GAAG;AAC1B,SAAKC,IAAL;AACD;;AACDA,EAAAA,IAAI,GAAG;AACLC,IAAAA,KAAK,CACH,iFADG,CAAL,CAGGC,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAKKG,YAAD,IAAkB,KAAKC,QAAL,CAAc;AAAER,MAAAA,KAAK,EAAEO,YAAY,CAACE;AAAtB,KAAd,CALtB,CAMI;AANJ;AAQAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,KAAvB;AACD;;AAEDY,EAAAA,GAAG,GAAG;AACJ,UAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCxB,QAAQ,CAAC,IAAD,CAAhD;AACA,wBACE,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAE,CAAxB;AAA2B,MAAA,aAAa,EAAE;AAAEyB,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,GAAG,EAAE;AAAf,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjB,KAAL,CAAWC,KAAX,CAAiBiB,GAAjB,CAAsBjB,KAAD,iBACpB,oBAAC,MAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACkB,UAAN,CAAiBC,QADxB;AAEE,MAAA,QAAQ,EAAE;AACRJ,QAAAA,GAAG,EAAEf,KAAK,CAACkB,UAAN,CAAiBE,GADd;AAERJ,QAAAA,GAAG,EAAEhB,KAAK,CAACkB,UAAN,CAAiBG;AAFd,OAFZ;AAME,MAAA,OAAO,EAAE,MAAM;AACbP,QAAAA,eAAe,CAACd,KAAD,CAAf;AACD,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,EAaGa,YAAY,iBACX,oBAAC,UAAD;AACE,MAAA,QAAQ,EAAE;AACRE,QAAAA,GAAG,EAAEF,YAAY,CAACK,UAAb,CAAwBE,GADrB;AAERJ,QAAAA,GAAG,EAAEH,YAAY,CAACK,UAAb,CAAwBG;AAFrB,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,CAdJ,CADF;AA0BD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,UAAU,GAAG/B,YAAY,CAACC,aAAa,CAACmB,GAAG,EAAJ,CAAd,CAA/B;AACA,WACE,aACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAAEY,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,MAAM,EAAE;AAA1B,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,YAAY,EACV,+HAFJ;AAIE,MAAA,cAAc,eAAE;AAAK,QAAA,KAAK,EAAE;AAAEA,UAAAA,MAAM,EAAE;AAAV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJlB;AAKE,MAAA,gBAAgB,eAAE;AAAK,QAAA,KAAK,EAAE;AAAEA,UAAAA,MAAM,EAAE;AAAV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALpB;AAME,MAAA,UAAU,eAAE;AAAK,QAAA,KAAK,EAAE;AAAEA,UAAAA,MAAM,EAAE;AAAV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAYAC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAbF;AAeD;;AAtE+B;;AAyElC,eAAe/B,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  GoogleMap,\n  withScriptjs,\n  withGoogleMap,\n  InfoWindow,\n  Marker,\n} from \"react-google-maps\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cases: [],\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.data();\n  }\n  data() {\n    fetch(\n      \"https://opendata.arcgis.com/datasets/bbb2e4f589ba40d692fab712ae37b9ac_1.geojson\"\n    )\n      .then((response) => response.json())\n      .then(\n        (responseJson) => this.setState({ cases: responseJson.features })\n        // jsonData is parsed json object received from url\n      );\n    console.log(this.state.cases);\n  }\n\n  Map() {\n    const [selectedCity, setSelectedCity] = useState(null);\n    return (\n      <GoogleMap defaultZoom={3} defaultCenter={{ lat: 0, lng: 0 }}>\n        {this.state.cases.map((cases) => (\n          <Marker\n            key={cases.properties.OBJECTID}\n            position={{\n              lat: cases.properties.Lat,\n              lng: cases.properties.Long_,\n            }}\n            onClick={() => {\n              setSelectedCity(cases);\n            }}\n          />\n        ))}\n        {selectedCity && (\n          <InfoWindow\n            position={{\n              lat: selectedCity.properties.Lat,\n              lng: selectedCity.properties.Long_,\n            }}\n          >\n            <div>city details</div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n    );\n  }\n\n  render() {\n    const WrappedMap = withScriptjs(withGoogleMap(Map()));\n    return (\n      (\n        <div className=\"App\" style={{ width: \"100vw\", height: \"100vh\" }}>\n          <WrappedMap\n            googleMapURL={\n              \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDnwT8wbcgGl3mz0qhqb4dJpdHl6k-D--4\"\n            }\n            loadingElement={<div style={{ height: \"100%\" }} />}\n            containerElement={<div style={{ height: \"100%\" }} />}\n            mapElement={<div style={{ height: \"100%\" }} />}\n          />\n        </div>\n      ),\n      document.getElementById(\"root\")\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}