{"ast":null,"code":"var _jsxFileName = \"/Users/a3506/Documents/WebDev/Map/WebDev/covid_map/src/components/Markers.js\";\nimport React, { useState } from \"react\";\nimport { Marker, InfoWindow } from \"react-google-maps\";\nimport Info from \"./Info.js\";\n\nclass Markers extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cases: [],\n      info: [],\n      displayInfo: false\n    };\n  }\n\n  componentDidMount() {\n    this.data();\n  }\n\n  data() {\n    fetch(\"https://opendata.arcgis.com/datasets/bbb2e4f589ba40d692fab712ae37b9ac_1.geojson\").then(response => response.json()).then(responseJson => this.setState({\n      cases: responseJson.features\n    }) // jsonData is parsed json object received from url\n    );\n    console.log(this.state.cases);\n  }\n\n  displayInfor(lt, ln) {\n    this.setState({\n      info: [{\n        lat: lt\n      }, {\n        lng: ln\n      }],\n      displayInfo: !this.state.displayInfo\n    });\n    console.log(this.state.info);\n  }\n\n  render() {\n    let info = null;\n\n    if (this.state.displayInfo) {\n      info = /*#__PURE__*/React.createElement(Info, {\n        lat: this.state.info.lat,\n        lng: this.state.info.Long_,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return this.state.cases.map(function (cases) {\n      return /*#__PURE__*/React.createElement(Marker, {\n        key: cases.properties.OBJECTID,\n        position: {\n          lat: cases.properties.Lat,\n          lng: cases.properties.Long_\n        },\n        onClick: () => this.displayInfor(cases.properties.Lat, cases.properties.Long_),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, info);\n    });\n  }\n\n}\n\nexport default Markers;","map":{"version":3,"sources":["/Users/a3506/Documents/WebDev/Map/WebDev/covid_map/src/components/Markers.js"],"names":["React","useState","Marker","InfoWindow","Info","Markers","Component","constructor","state","cases","info","displayInfo","componentDidMount","data","fetch","then","response","json","responseJson","setState","features","console","log","displayInfor","lt","ln","lat","lng","render","Long_","map","properties","OBJECTID","Lat"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,mBAAnC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,OAAN,SAAsBL,KAAK,CAACM,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,IAAI,EAAE,EAFK;AAGXC,MAAAA,WAAW,EAAE;AAHF,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,IAAL;AACD;;AAEDA,EAAAA,IAAI,GAAG;AACLC,IAAAA,KAAK,CACH,iFADG,CAAL,CAGGC,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAKKG,YAAD,IAAkB,KAAKC,QAAL,CAAc;AAAEV,MAAAA,KAAK,EAAES,YAAY,CAACE;AAAtB,KAAd,CALtB,CAMI;AANJ;AAQAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWC,KAAvB;AACD;;AAEDc,EAAAA,YAAY,CAACC,EAAD,EAAKC,EAAL,EAAS;AACnB,SAAKN,QAAL,CAAc;AACZT,MAAAA,IAAI,EAAE,CAAC;AAAEgB,QAAAA,GAAG,EAAEF;AAAP,OAAD,EAAc;AAAEG,QAAAA,GAAG,EAAEF;AAAP,OAAd,CADM;AAEZd,MAAAA,WAAW,EAAE,CAAC,KAAKH,KAAL,CAAWG;AAFb,KAAd;AAIAU,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWE,IAAvB;AACD;;AACDkB,EAAAA,MAAM,GAAG;AACP,QAAIlB,IAAI,GAAG,IAAX;;AACA,QAAI,KAAKF,KAAL,CAAWG,WAAf,EAA4B;AAC1BD,MAAAA,IAAI,gBAAG,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAE,KAAKF,KAAL,CAAWE,IAAX,CAAgBgB,GAA3B;AAAgC,QAAA,GAAG,EAAE,KAAKlB,KAAL,CAAWE,IAAX,CAAgBmB,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WAAO,KAAKrB,KAAL,CAAWC,KAAX,CAAiBqB,GAAjB,CAAqB,UAAUrB,KAAV,EAAiB;AAC3C,0BACE,oBAAC,MAAD;AACE,QAAA,GAAG,EAAEA,KAAK,CAACsB,UAAN,CAAiBC,QADxB;AAEE,QAAA,QAAQ,EAAE;AACRN,UAAAA,GAAG,EAAEjB,KAAK,CAACsB,UAAN,CAAiBE,GADd;AAERN,UAAAA,GAAG,EAAElB,KAAK,CAACsB,UAAN,CAAiBF;AAFd,SAFZ;AAME,QAAA,OAAO,EAAE,MACP,KAAKN,YAAL,CAAkBd,KAAK,CAACsB,UAAN,CAAiBE,GAAnC,EAAwCxB,KAAK,CAACsB,UAAN,CAAiBF,KAAzD,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUGnB,IAVH,CADF;AAcD,KAfM,CAAP;AAgBD;;AAtDmC;;AAyDtC,eAAeL,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Marker, InfoWindow } from \"react-google-maps\";\nimport Info from \"./Info.js\";\n\nclass Markers extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cases: [],\n      info: [],\n      displayInfo: false,\n    };\n  }\n\n  componentDidMount() {\n    this.data();\n  }\n\n  data() {\n    fetch(\n      \"https://opendata.arcgis.com/datasets/bbb2e4f589ba40d692fab712ae37b9ac_1.geojson\"\n    )\n      .then((response) => response.json())\n      .then(\n        (responseJson) => this.setState({ cases: responseJson.features })\n        // jsonData is parsed json object received from url\n      );\n    console.log(this.state.cases);\n  }\n\n  displayInfor(lt, ln) {\n    this.setState({\n      info: [{ lat: lt }, { lng: ln }],\n      displayInfo: !this.state.displayInfo,\n    });\n    console.log(this.state.info);\n  }\n  render() {\n    let info = null;\n    if (this.state.displayInfo) {\n      info = <Info lat={this.state.info.lat} lng={this.state.info.Long_} />;\n    }\n    return this.state.cases.map(function (cases) {\n      return (\n        <Marker\n          key={cases.properties.OBJECTID}\n          position={{\n            lat: cases.properties.Lat,\n            lng: cases.properties.Long_,\n          }}\n          onClick={() =>\n            this.displayInfor(cases.properties.Lat, cases.properties.Long_)\n          }\n        >\n          {info}\n        </Marker>\n      );\n    });\n  }\n}\n\nexport default Markers;\n"]},"metadata":{},"sourceType":"module"}