{"ast":null,"code":"import _slicedToArray from\"/Users/a3506/Documents/WebDev/Map/WebDev/covid_map/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";//Icon author: Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>\nimport React,{useState,useEffect}from\"react\";import{GoogleMap,withScriptjs,withGoogleMap,InfoWindow,Marker}from\"react-google-maps\";import mapStyle from\"./mapStyle.js\";//Could not get clusters to work due to the data inconsistency\n//const {MarkerClusterer} = require(\"react-google-maps/lib/components/addons/MarkerClusterer\");\nfunction Map(){var _useState=useState({lat:null,lng:null,cty:null,cnt:null,cnf:null,rcv:null,dth:null}),_useState2=_slicedToArray(_useState,2),selectedCity=_useState2[0],setSelectedCity=_useState2[1];function pass(lt,ln,ct,cn,cf,rv,dt){if(!isNaN(lt)||lt!=null){if(!isNaN(ln)||ln!=null){setSelectedCity({lat:lt,lng:ln,cty:ct,cnt:cn,cnf:cf,rcv:rv,dth:dt});}}}var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),ccases=_useState4[0],setCCases=_useState4[1];//var obtain = false;\n//const [data, setData] = useState({ cases: null });\nuseEffect(function(){fetch(\"https://opendata.arcgis.com/datasets/bbb2e4f589ba40d692fab712ae37b9ac_1.geojson\").then(function(response){return response.json();}).then(function(responseJson){return setCCases(responseJson);}// jsonData is parsed json object received from url\n);},[setCCases]);return/*#__PURE__*/React.createElement(GoogleMap,{defaultZoom:4,defaultCenter:{lat:37.0902,lng:-95.7129},defaultOptions:{styles:mapStyle}},ccases&&ccases.features.map(function(place){return/*#__PURE__*/React.createElement(Marker,{key:place.properties.OBJECTID,position:{lat:place.properties.Lat,lng:place.properties.Long_},onClick:function onClick(){return pass(place.properties.Lat,place.properties.Long_,place.properties.Province_State,place.properties.Country_Region,place.properties.Confirmed,place.properties.Recovered,place.properties.Deaths);},icon:{url:\"/coronavirus.svg\",scaledSize:new window.google.maps.Size(Math.log(place.properties.Confirmed)*3,Math.log(place.properties.Confirmed)*3)}});}),selectedCity.lat!=null&&selectedCity.lng!=null&&/*#__PURE__*/React.createElement(InfoWindow,{position:{lat:selectedCity.lat,lng:selectedCity.lng},options:{maxWidth:500},onCloseClick:function onCloseClick(){setSelectedCity({lat:null,lng:null,cty:null,cnt:null,cnf:null,rcv:null,dth:null});}},/*#__PURE__*/React.createElement(\"div\",{style:{width:\"200px\"}},/*#__PURE__*/React.createElement(\"h1\",null,selectedCity.cty,\", \",selectedCity.cnt,/*#__PURE__*/React.createElement(\"img\",{src:\"/coronavirus.svg\",alt:\"\",width:\"30vmin\",height:\"30vmin\"})),/*#__PURE__*/React.createElement(\"h3\",{style:{color:\"green\"}},\"Confirmed: \",selectedCity.cnf),/*#__PURE__*/React.createElement(\"h3\",{style:{color:\"orange\"}},\"Recovered: \",selectedCity.rcv),/*#__PURE__*/React.createElement(\"h3\",{style:{color:\"red\"}},\"Deaths: \",selectedCity.dth))));}var WrappedMap=withScriptjs(withGoogleMap(Map));function App(){return/*#__PURE__*/React.createElement(\"div\",{className:\"App\",style:{width:\"100vw\",height:\"100vh\"}},/*#__PURE__*/React.createElement(WrappedMap,{googleMapURL:\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDnwT8wbcgGl3mz0qhqb4dJpdHl6k-D--4\",loadingElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"100%\"}}),containerElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"100%\"}}),mapElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"100%\"}})}));}export default App;","map":{"version":3,"sources":["/Users/a3506/Documents/WebDev/Map/WebDev/covid_map/src/App.js"],"names":["React","useState","useEffect","GoogleMap","withScriptjs","withGoogleMap","InfoWindow","Marker","mapStyle","Map","lat","lng","cty","cnt","cnf","rcv","dth","selectedCity","setSelectedCity","pass","lt","ln","ct","cn","cf","rv","dt","isNaN","ccases","setCCases","fetch","then","response","json","responseJson","styles","features","map","place","properties","OBJECTID","Lat","Long_","Province_State","Country_Region","Confirmed","Recovered","Deaths","url","scaledSize","window","google","maps","Size","Math","log","maxWidth","width","color","WrappedMap","App","height"],"mappings":"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","sourcesContent":["//Icon author: Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>\n\nimport React, { useState, useEffect } from \"react\";\nimport {\n  GoogleMap,\n  withScriptjs,\n  withGoogleMap,\n  InfoWindow,\n  Marker,\n} from \"react-google-maps\";\nimport mapStyle from \"./mapStyle.js\";\n//Could not get clusters to work due to the data inconsistency\n//const {MarkerClusterer} = require(\"react-google-maps/lib/components/addons/MarkerClusterer\");\n\nfunction Map() {\n  const [selectedCity, setSelectedCity] = useState({\n    lat: null,\n    lng: null,\n    cty: null,\n    cnt: null,\n    cnf: null,\n    rcv: null,\n    dth: null,\n  });\n\n  function pass(lt, ln, ct, cn, cf, rv, dt) {\n    if (!isNaN(lt) || lt != null) {\n      if (!isNaN(ln) || ln != null) {\n        setSelectedCity({\n          lat: lt,\n          lng: ln,\n          cty: ct,\n          cnt: cn,\n          cnf: cf,\n          rcv: rv,\n          dth: dt,\n        });\n      }\n    }\n  }\n  const [ccases, setCCases] = useState(null);\n  //var obtain = false;\n  //const [data, setData] = useState({ cases: null });\n  useEffect(() => {\n    fetch(\n      \"https://opendata.arcgis.com/datasets/bbb2e4f589ba40d692fab712ae37b9ac_1.geojson\"\n    )\n      .then((response) => response.json())\n      .then(\n        (responseJson) => setCCases(responseJson)\n\n        // jsonData is parsed json object received from url\n      );\n  }, [setCCases]);\n  return (\n    <GoogleMap\n      defaultZoom={4}\n      defaultCenter={{ lat: 37.0902, lng: -95.7129 }}\n      defaultOptions={{ styles: mapStyle }}\n    >\n      {ccases &&\n        ccases.features.map((place) => (\n          <Marker\n            key={place.properties.OBJECTID}\n            position={{\n              lat: place.properties.Lat,\n              lng: place.properties.Long_,\n            }}\n            onClick={() =>\n              pass(\n                place.properties.Lat,\n                place.properties.Long_,\n                place.properties.Province_State,\n                place.properties.Country_Region,\n                place.properties.Confirmed,\n                place.properties.Recovered,\n                place.properties.Deaths\n              )\n            }\n            icon={{\n              url: \"/coronavirus.svg\",\n              scaledSize: new window.google.maps.Size(\n                Math.log(place.properties.Confirmed) * 3,\n                Math.log(place.properties.Confirmed) * 3\n              ),\n            }}\n          />\n        ))}\n      {selectedCity.lat != null && selectedCity.lng != null && (\n        <InfoWindow\n          position={{\n            lat: selectedCity.lat,\n            lng: selectedCity.lng,\n          }}\n          options={{\n            maxWidth: 500,\n          }}\n          onCloseClick={() => {\n            setSelectedCity({\n              lat: null,\n              lng: null,\n              cty: null,\n              cnt: null,\n              cnf: null,\n              rcv: null,\n              dth: null,\n            });\n          }}\n        >\n          <div style={{ width: \"200px\" }}>\n            <h1>\n              {selectedCity.cty}, {selectedCity.cnt}\n              <img\n                src={\"/coronavirus.svg\"}\n                alt=\"\"\n                width=\"30vmin\"\n                height=\"30vmin\"\n              />\n            </h1>\n            <h3 style={{ color: \"green\" }}>Confirmed: {selectedCity.cnf}</h3>\n            <h3 style={{ color: \"orange\" }}>Recovered: {selectedCity.rcv}</h3>\n            <h3 style={{ color: \"red\" }}>Deaths: {selectedCity.dth}</h3>\n          </div>\n        </InfoWindow>\n      )}\n    </GoogleMap>\n  );\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\nfunction App() {\n  return (\n    <div className=\"App\" style={{ width: \"100vw\", height: \"100vh\" }}>\n      <WrappedMap\n        googleMapURL={\n          \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDnwT8wbcgGl3mz0qhqb4dJpdHl6k-D--4\"\n        }\n        loadingElement={<div style={{ height: \"100%\" }} />}\n        containerElement={<div style={{ height: \"100%\" }} />}\n        mapElement={<div style={{ height: \"100%\" }} />}\n      />\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}