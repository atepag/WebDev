{"ast":null,"code":"var _jsxFileName = \"/Users/a3506/Documents/WebDev/Map/WebDev/covid_map/src/components/Markers.js\";\nimport React, { useState } from \"react\";\nimport { Marker, InfoWindow } from \"react-google-maps\";\n\nclass Markers extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cases: []\n    };\n  }\n\n  componentDidMount() {\n    this.data();\n  }\n\n  data() {\n    fetch(\"https://opendata.arcgis.com/datasets/bbb2e4f589ba40d692fab712ae37b9ac_1.geojson\").then(response => response.json()).then(responseJson => this.setState({\n      cases: responseJson.features\n    }) // jsonData is parsed json object received from url\n    );\n    console.log(this.state.cases);\n  }\n\n  getWindow(what) {\n    return /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: what.properties.Lat,\n        lng: what.properties.Long_\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"city details\"));\n  }\n\n  render() {\n    return this.state.cases.map(function (cases) {\n      return /*#__PURE__*/React.createElement(Marker, {\n        key: cases.properties.OBJECTID,\n        position: {\n          lat: cases.properties.Lat,\n          lng: cases.properties.Long_\n        },\n        onClick: () => getWindow(cases),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      });\n    });\n  }\n\n}\n\nexport default Markers;","map":{"version":3,"sources":["/Users/a3506/Documents/WebDev/Map/WebDev/covid_map/src/components/Markers.js"],"names":["React","useState","Marker","InfoWindow","Markers","Component","constructor","state","cases","componentDidMount","data","fetch","then","response","json","responseJson","setState","features","console","log","getWindow","what","lat","properties","Lat","lng","Long_","render","map","OBJECTID"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,mBAAnC;;AAEA,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,IAAL;AACD;;AAEDA,EAAAA,IAAI,GAAG;AACLC,IAAAA,KAAK,CACH,iFADG,CAAL,CAGGC,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAKKG,YAAD,IAAkB,KAAKC,QAAL,CAAc;AAAER,MAAAA,KAAK,EAAEO,YAAY,CAACE;AAAtB,KAAd,CALtB,CAMI;AANJ;AAQAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,KAAvB;AACD;;AACDY,EAAAA,SAAS,CAACC,IAAD,EAAO;AACd,wBACE,oBAAC,UAAD;AACE,MAAA,QAAQ,EAAE;AACRC,QAAAA,GAAG,EAAED,IAAI,CAACE,UAAL,CAAgBC,GADb;AAERC,QAAAA,GAAG,EAAEJ,IAAI,CAACE,UAAL,CAAgBG;AAFb,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,CADF;AAUD;;AACDC,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKpB,KAAL,CAAWC,KAAX,CAAiBoB,GAAjB,CAAqB,UAAUpB,KAAV,EAAiB;AAC3C,0BACE,oBAAC,MAAD;AACE,QAAA,GAAG,EAAEA,KAAK,CAACe,UAAN,CAAiBM,QADxB;AAEE,QAAA,QAAQ,EAAE;AACRP,UAAAA,GAAG,EAAEd,KAAK,CAACe,UAAN,CAAiBC,GADd;AAERC,UAAAA,GAAG,EAAEjB,KAAK,CAACe,UAAN,CAAiBG;AAFd,SAFZ;AAME,QAAA,OAAO,EAAE,MAAMN,SAAS,CAACZ,KAAD,CAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD,KAXM,CAAP;AAYD;;AAhDmC;;AAmDtC,eAAeJ,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Marker, InfoWindow } from \"react-google-maps\";\n\nclass Markers extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cases: [],\n    };\n  }\n\n  componentDidMount() {\n    this.data();\n  }\n\n  data() {\n    fetch(\n      \"https://opendata.arcgis.com/datasets/bbb2e4f589ba40d692fab712ae37b9ac_1.geojson\"\n    )\n      .then((response) => response.json())\n      .then(\n        (responseJson) => this.setState({ cases: responseJson.features })\n        // jsonData is parsed json object received from url\n      );\n    console.log(this.state.cases);\n  }\n  getWindow(what) {\n    return (\n      <InfoWindow\n        position={{\n          lat: what.properties.Lat,\n          lng: what.properties.Long_,\n        }}\n      >\n        <div>city details</div>\n      </InfoWindow>\n    );\n  }\n  render() {\n    return this.state.cases.map(function (cases) {\n      return (\n        <Marker\n          key={cases.properties.OBJECTID}\n          position={{\n            lat: cases.properties.Lat,\n            lng: cases.properties.Long_,\n          }}\n          onClick={() => getWindow(cases)}\n        />\n      );\n    });\n  }\n}\n\nexport default Markers;\n"]},"metadata":{},"sourceType":"module"}