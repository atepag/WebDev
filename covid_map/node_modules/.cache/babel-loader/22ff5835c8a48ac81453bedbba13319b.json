{"ast":null,"code":"var _jsxFileName = \"/Users/a3506/Documents/WebDev/Map/WebDev/covid_map/src/App.js\";\n//Icon author: Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, withScriptjs, withGoogleMap, InfoWindow, Marker } from \"react-google-maps\";\nimport mapStyle from \"./mapStyle.js\";\n\nconst {\n  SearchBox\n} = require(\"react-google-maps/lib/components/places/SearchBox\"); //Could not get clusters to work due to the data inconsistency\n//const {MarkerClusterer} = require(\"react-google-maps/lib/components/addons/MarkerClusterer\");\n\n\nfunction Map() {\n  const [selectedCity, setSelectedCity] = useState({\n    lat: null,\n    lng: null,\n    cty: null,\n    cnt: null,\n    cnf: null,\n    rcv: null,\n    dth: null\n  });\n\n  function pass(lt, ln, ct, cn, cf, rv, dt) {\n    if (!isNaN(lt) || lt != null) {\n      if (!isNaN(ln) || ln != null) {\n        setSelectedCity({\n          lat: lt,\n          lng: ln,\n          cty: ct,\n          cnt: cn,\n          cnf: cf,\n          rcv: rv,\n          dth: dt\n        });\n      }\n    }\n  }\n\n  const [ccases, setCCases] = useState(null); //var obtain = false;\n  //const [data, setData] = useState({ cases: null });\n\n  useEffect(() => {\n    fetch(\"https://opendata.arcgis.com/datasets/bbb2e4f589ba40d692fab712ae37b9ac_1.geojson\").then(response => response.json()).then(responseJson => setCCases(responseJson) // jsonData is parsed json object received from url\n    );\n  }, [setCCases]);\n  return /*#__PURE__*/React.createElement(GoogleMap, {\n    defaultZoom: 4,\n    defaultCenter: {\n      lat: 37.0902,\n      lng: -95.7129\n    },\n    defaultOptions: {\n      styles: mapStyle\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchBox, {\n    position: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Customized your placeholder\",\n    style: {\n      boxSizing: `border-box`,\n      border: `1px solid transparent`,\n      width: `240px`,\n      height: `32px`,\n      marginTop: `27px`,\n      padding: `0 12px`,\n      borderRadius: `3px`,\n      boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n      fontSize: `14px`,\n      outline: `none`,\n      textOverflow: `ellipses`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), ccases && ccases.features.map(place => /*#__PURE__*/React.createElement(Marker, {\n    key: place.properties.OBJECTID,\n    position: {\n      lat: place.properties.Lat,\n      lng: place.properties.Long_\n    },\n    onClick: () => pass(place.properties.Lat, place.properties.Long_, place.properties.Province_State, place.properties.Country_Region, place.properties.Confirmed, place.properties.Recovered, place.properties.Deaths),\n    icon: {\n      url: \"/coronavirus.svg\",\n      scaledSize: new window.google.maps.Size(Math.log(place.properties.Confirmed) * 3, Math.log(place.properties.Confirmed) * 3)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  })), selectedCity.lat != null && selectedCity.lng != null && /*#__PURE__*/React.createElement(InfoWindow, {\n    position: {\n      lat: selectedCity.lat,\n      lng: selectedCity.lng\n    },\n    options: {\n      maxWidth: 500\n    },\n    onCloseClick: () => {\n      setSelectedCity({\n        lat: null,\n        lng: null,\n        cty: null,\n        cnt: null,\n        cnf: null,\n        rcv: null,\n        dth: null\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, selectedCity.cty), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, selectedCity.cnt, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/coronavirus.svg\",\n    alt: \"\",\n    width: \"30vmin\",\n    height: \"30vmin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"Confirmed: \", /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 26\n    }\n  }, selectedCity.cnf)), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"Recovered: \", /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 26\n    }\n  }, selectedCity.rcv)), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Deaths: \", selectedCity.dth))));\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    style: {\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(WrappedMap, {\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDnwT8wbcgGl3mz0qhqb4dJpdHl6k-D--4\",\n    loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }\n    }),\n    containerElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 27\n      }\n    }),\n    mapElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a3506/Documents/WebDev/Map/WebDev/covid_map/src/App.js"],"names":["React","useState","useEffect","GoogleMap","withScriptjs","withGoogleMap","InfoWindow","Marker","mapStyle","SearchBox","require","Map","selectedCity","setSelectedCity","lat","lng","cty","cnt","cnf","rcv","dth","pass","lt","ln","ct","cn","cf","rv","dt","isNaN","ccases","setCCases","fetch","then","response","json","responseJson","styles","boxSizing","border","width","height","marginTop","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","features","map","place","properties","OBJECTID","Lat","Long_","Province_State","Country_Region","Confirmed","Recovered","Deaths","url","scaledSize","window","google","maps","Size","Math","log","maxWidth","color","WrappedMap","App"],"mappings":"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","sourcesContent":["//Icon author: Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>\n\nimport React, { useState, useEffect } from \"react\";\nimport {\n  GoogleMap,\n  withScriptjs,\n  withGoogleMap,\n  InfoWindow,\n  Marker,\n} from \"react-google-maps\";\nimport mapStyle from \"./mapStyle.js\";\nconst {\n  SearchBox,\n} = require(\"react-google-maps/lib/components/places/SearchBox\");\n//Could not get clusters to work due to the data inconsistency\n//const {MarkerClusterer} = require(\"react-google-maps/lib/components/addons/MarkerClusterer\");\n\nfunction Map() {\n  const [selectedCity, setSelectedCity] = useState({\n    lat: null,\n    lng: null,\n    cty: null,\n    cnt: null,\n    cnf: null,\n    rcv: null,\n    dth: null,\n  });\n\n  function pass(lt, ln, ct, cn, cf, rv, dt) {\n    if (!isNaN(lt) || lt != null) {\n      if (!isNaN(ln) || ln != null) {\n        setSelectedCity({\n          lat: lt,\n          lng: ln,\n          cty: ct,\n          cnt: cn,\n          cnf: cf,\n          rcv: rv,\n          dth: dt,\n        });\n      }\n    }\n  }\n  const [ccases, setCCases] = useState(null);\n  //var obtain = false;\n  //const [data, setData] = useState({ cases: null });\n  useEffect(() => {\n    fetch(\n      \"https://opendata.arcgis.com/datasets/bbb2e4f589ba40d692fab712ae37b9ac_1.geojson\"\n    )\n      .then((response) => response.json())\n      .then(\n        (responseJson) => setCCases(responseJson)\n        // jsonData is parsed json object received from url\n      );\n  }, [setCCases]);\n  return (\n    <GoogleMap\n      defaultZoom={4}\n      defaultCenter={{ lat: 37.0902, lng: -95.7129 }}\n      defaultOptions={{ styles: mapStyle }}\n    >\n      {\n        <SearchBox position>\n          <input\n            type=\"text\"\n            placeholder=\"Customized your placeholder\"\n            style={{\n              boxSizing: `border-box`,\n              border: `1px solid transparent`,\n              width: `240px`,\n              height: `32px`,\n              marginTop: `27px`,\n              padding: `0 12px`,\n              borderRadius: `3px`,\n              boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n              fontSize: `14px`,\n              outline: `none`,\n              textOverflow: `ellipses`,\n            }}\n          />\n        </SearchBox>\n      }\n      {ccases &&\n        ccases.features.map((place) => (\n          <Marker\n            key={place.properties.OBJECTID}\n            position={{\n              lat: place.properties.Lat,\n              lng: place.properties.Long_,\n            }}\n            onClick={() =>\n              pass(\n                place.properties.Lat,\n                place.properties.Long_,\n                place.properties.Province_State,\n                place.properties.Country_Region,\n                place.properties.Confirmed,\n                place.properties.Recovered,\n                place.properties.Deaths\n              )\n            }\n            icon={{\n              url: \"/coronavirus.svg\",\n              scaledSize: new window.google.maps.Size(\n                Math.log(place.properties.Confirmed) * 3,\n                Math.log(place.properties.Confirmed) * 3\n              ),\n            }}\n          />\n        ))}\n      {selectedCity.lat != null && selectedCity.lng != null && (\n        <InfoWindow\n          position={{\n            lat: selectedCity.lat,\n            lng: selectedCity.lng,\n          }}\n          options={{\n            maxWidth: 500,\n          }}\n          onCloseClick={() => {\n            setSelectedCity({\n              lat: null,\n              lng: null,\n              cty: null,\n              cnt: null,\n              cnf: null,\n              rcv: null,\n              dth: null,\n            });\n          }}\n        >\n          <div style={{ width: \"200px\" }}>\n            <h1>{selectedCity.cty}</h1>\n            <h2>\n              {selectedCity.cnt}\n              <img\n                src={\"/coronavirus.svg\"}\n                alt=\"\"\n                width=\"30vmin\"\n                height=\"30vmin\"\n              />\n            </h2>\n            <h3>\n              Confirmed: <p style={{ color: \"red\" }}>{selectedCity.cnf}</p>\n            </h3>\n            <h3>\n              Recovered: <p style={{ color: \"red\" }}>{selectedCity.rcv}</p>\n            </h3>\n            <h3 style={{ color: \"red\" }}>Deaths: {selectedCity.dth}</h3>\n          </div>\n        </InfoWindow>\n      )}\n    </GoogleMap>\n  );\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\nfunction App() {\n  return (\n    <div className=\"App\" style={{ width: \"100vw\", height: \"100vh\" }}>\n      <WrappedMap\n        googleMapURL={\n          \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDnwT8wbcgGl3mz0qhqb4dJpdHl6k-D--4\"\n        }\n        loadingElement={<div style={{ height: \"100%\" }} />}\n        containerElement={<div style={{ height: \"100%\" }} />}\n        mapElement={<div style={{ height: \"100%\" }} />}\n      />\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}