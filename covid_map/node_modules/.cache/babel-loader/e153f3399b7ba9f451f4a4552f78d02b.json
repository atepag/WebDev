{"ast":null,"code":"var _jsxFileName = \"/Users/a3506/Documents/WebDev/Map/WebDev/covid_map/src/components/Markers.js\";\nimport React, { useState } from \"react\";\nimport { Marker, InfoWindow } from \"react-google-maps\";\n\nclass Markers extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cases: []\n    };\n  }\n\n  componentDidMount() {\n    this.data();\n  }\n\n  data() {\n    fetch(\"https://opendata.arcgis.com/datasets/bbb2e4f589ba40d692fab712ae37b9ac_1.geojson\").then(response => response.json()).then(responseJson => this.setState({\n      cases: responseJson.features\n    }) // jsonData is parsed json object received from url\n    );\n    console.log(this.state.cases);\n  }\n\n  render() {\n    const [selectedCity, setSelectedCity] = useState(null);\n    return this.state.cases.map(function (cases) {\n      /*#__PURE__*/\n      React.createElement(Marker, {\n        key: cases.properties.OBJECTID,\n        position: {\n          lat: cases.properties.Lat,\n          lng: cases.properties.Long_\n        },\n        onClick: () => {\n          setSelectedCity(cases);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      });\n      {\n        selectedCity && /*#__PURE__*/React.createElement(InfoWindow, {\n          position: {\n            lat: selectedCity.properties.Lat,\n            lng: selectedCity.properties.Long_\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }\n        }, \"city details\"));\n      }\n    });\n  }\n\n}\n\nexport default Markers;","map":{"version":3,"sources":["/Users/a3506/Documents/WebDev/Map/WebDev/covid_map/src/components/Markers.js"],"names":["React","useState","Marker","InfoWindow","Markers","Component","constructor","state","cases","componentDidMount","data","fetch","then","response","json","responseJson","setState","features","console","log","render","selectedCity","setSelectedCity","map","properties","OBJECTID","lat","Lat","lng","Long_"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,mBAAnC;;AAEA,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,IAAL;AACD;;AAEDA,EAAAA,IAAI,GAAG;AACLC,IAAAA,KAAK,CACH,iFADG,CAAL,CAGGC,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAKKG,YAAD,IAAkB,KAAKC,QAAL,CAAc;AAAER,MAAAA,KAAK,EAAEO,YAAY,CAACE;AAAtB,KAAd,CALtB,CAMI;AANJ;AAQAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,KAAvB;AACD;;AACDY,EAAAA,MAAM,GAAG;AACP,UAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,CAAC,IAAD,CAAhD;AACA,WAAO,KAAKM,KAAL,CAAWC,KAAX,CAAiBe,GAAjB,CAAqB,UAAUf,KAAV,EAAiB;AAC3C;AAAA,0BAAC,MAAD;AACE,QAAA,GAAG,EAAEA,KAAK,CAACgB,UAAN,CAAiBC,QADxB;AAEE,QAAA,QAAQ,EAAE;AACRC,UAAAA,GAAG,EAAElB,KAAK,CAACgB,UAAN,CAAiBG,GADd;AAERC,UAAAA,GAAG,EAAEpB,KAAK,CAACgB,UAAN,CAAiBK;AAFd,SAFZ;AAME,QAAA,OAAO,EAAE,MAAM;AACbP,UAAAA,eAAe,CAACd,KAAD,CAAf;AACD,SARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACEa,QAAAA,YAAY,iBACV,oBAAC,UAAD;AACE,UAAA,QAAQ,EAAE;AACRK,YAAAA,GAAG,EAAEL,YAAY,CAACG,UAAb,CAAwBG,GADrB;AAERC,YAAAA,GAAG,EAAEP,YAAY,CAACG,UAAb,CAAwBK;AAFrB,WADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANF,CADF;AAUD;AACF,KAxBM,CAAP;AAyBD;;AAlDmC;;AAqDtC,eAAezB,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Marker, InfoWindow } from \"react-google-maps\";\n\nclass Markers extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cases: [],\n    };\n  }\n\n  componentDidMount() {\n    this.data();\n  }\n\n  data() {\n    fetch(\n      \"https://opendata.arcgis.com/datasets/bbb2e4f589ba40d692fab712ae37b9ac_1.geojson\"\n    )\n      .then((response) => response.json())\n      .then(\n        (responseJson) => this.setState({ cases: responseJson.features })\n        // jsonData is parsed json object received from url\n      );\n    console.log(this.state.cases);\n  }\n  render() {\n    const [selectedCity, setSelectedCity] = useState(null);\n    return this.state.cases.map(function (cases) {\n      <Marker\n        key={cases.properties.OBJECTID}\n        position={{\n          lat: cases.properties.Lat,\n          lng: cases.properties.Long_,\n        }}\n        onClick={() => {\n          setSelectedCity(cases);\n        }}\n      />;\n\n      {\n        selectedCity && (\n          <InfoWindow\n            position={{\n              lat: selectedCity.properties.Lat,\n              lng: selectedCity.properties.Long_,\n            }}\n          >\n            <div>city details</div>\n          </InfoWindow>\n        );\n      }\n    });\n  }\n}\n\nexport default Markers;\n"]},"metadata":{},"sourceType":"module"}