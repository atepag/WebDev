{"ast":null,"code":"var _jsxFileName = \"/Users/a3506/Documents/WebDev/Map/WebDev/covid_map/src/App.js\";\nimport React, { useState } from \"react\";\nimport { GoogleMap, withScriptjs, withGoogleMap, InfoWindow, Marker } from \"react-google-maps\";\nimport Markers, { getter } from \"./components/Markers.js\";\n/*\nasync function getData() {\n  return fetch(\n    \"https://opendata.arcgis.com/datasets/bbb2e4f589ba40d692fab712ae37b9ac_1.geojson\"\n  )\n    .then((response) => response.json())\n    .then((responseJson) => {\n      // jsonData is parsed json object received from url\n      responseJson;\n    })\n    .catch((error) => {\n      // handle your errors here\n      console.error(error);\n    });\n}\nasync function setDat() {\n  var data = await Promise.resolve(getData()).then((result) => result.json());\n  return data;\n} var data = setDat();\n  console.log(data);*/\n\nfunction Map() {\n  const [selectedCity, setSelectedCity] = useState(null);\n  const cases = getter();\n  return /*#__PURE__*/React.createElement(GoogleMap, {\n    defaultZoom: 3,\n    defaultCenter: {\n      lat: 0,\n      lng: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Marker, {\n    key: cases.properties.OBJECTID,\n    position: {\n      lat: cases.properties.Lat,\n      lng: cases.properties.Long_\n    },\n    onClick: () => {\n      setSelectedCity(cases);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), \";\", selectedCity && /*#__PURE__*/React.createElement(InfoWindow, {\n    position: {\n      lat: selectedCity.properties.Lat,\n      lng: selectedCity.properties.Long_\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"city details\")));\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    style: {\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(WrappedMap, {\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDnwT8wbcgGl3mz0qhqb4dJpdHl6k-D--4\",\n    loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }),\n    containerElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }\n    }),\n    mapElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a3506/Documents/WebDev/Map/WebDev/covid_map/src/App.js"],"names":["React","useState","GoogleMap","withScriptjs","withGoogleMap","InfoWindow","Marker","Markers","getter","Map","selectedCity","setSelectedCity","cases","lat","lng","properties","OBJECTID","Lat","Long_","WrappedMap","App","width","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,SADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,UAJF,EAKEC,MALF,QAMO,mBANP;AAOA,OAAOC,OAAP,IAAkBC,MAAlB,QAAgC,yBAAhC;AACA;;;;;;;;;;;;;;;;;;;;;AAqBA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAMW,KAAK,GAAGJ,MAAM,EAApB;AACA,sBACE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAE,CAAxB;AAA2B,IAAA,aAAa,EAAE;AAAEK,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,GAAG,EAAE;AAAf,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEF,KAAK,CAACG,UAAN,CAAiBC,QADxB;AAEE,IAAA,QAAQ,EAAE;AACRH,MAAAA,GAAG,EAAED,KAAK,CAACG,UAAN,CAAiBE,GADd;AAERH,MAAAA,GAAG,EAAEF,KAAK,CAACG,UAAN,CAAiBG;AAFd,KAFZ;AAME,IAAA,OAAO,EAAE,MAAM;AACbP,MAAAA,eAAe,CAACC,KAAD,CAAf;AACD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,OAYGF,YAAY,iBACX,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAE;AACRG,MAAAA,GAAG,EAAEH,YAAY,CAACK,UAAb,CAAwBE,GADrB;AAERH,MAAAA,GAAG,EAAEJ,YAAY,CAACK,UAAb,CAAwBG;AAFrB,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,CAbJ,CADF;AAyBD;;AAED,MAAMC,UAAU,GAAGhB,YAAY,CAACC,aAAa,CAACK,GAAD,CAAd,CAA/B;;AACA,SAASW,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,MAAM,EAAE;AAA1B,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,YAAY,EACV,+HAFJ;AAIE,IAAA,cAAc,eAAE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJlB;AAKE,IAAA,gBAAgB,eAAE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALpB;AAME,IAAA,UAAU,eAAE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAYD;;AACD,eAAeF,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  GoogleMap,\n  withScriptjs,\n  withGoogleMap,\n  InfoWindow,\n  Marker,\n} from \"react-google-maps\";\nimport Markers, { getter } from \"./components/Markers.js\";\n/*\nasync function getData() {\n  return fetch(\n    \"https://opendata.arcgis.com/datasets/bbb2e4f589ba40d692fab712ae37b9ac_1.geojson\"\n  )\n    .then((response) => response.json())\n    .then((responseJson) => {\n      // jsonData is parsed json object received from url\n      responseJson;\n    })\n    .catch((error) => {\n      // handle your errors here\n      console.error(error);\n    });\n}\nasync function setDat() {\n  var data = await Promise.resolve(getData()).then((result) => result.json());\n  return data;\n} var data = setDat();\n  console.log(data);*/\n\nfunction Map() {\n  const [selectedCity, setSelectedCity] = useState(null);\n  const cases = getter();\n  return (\n    <GoogleMap defaultZoom={3} defaultCenter={{ lat: 0, lng: 0 }}>\n      <Marker\n        key={cases.properties.OBJECTID}\n        position={{\n          lat: cases.properties.Lat,\n          lng: cases.properties.Long_,\n        }}\n        onClick={() => {\n          setSelectedCity(cases);\n        }}\n      />\n      ;\n      {selectedCity && (\n        <InfoWindow\n          position={{\n            lat: selectedCity.properties.Lat,\n            lng: selectedCity.properties.Long_,\n          }}\n        >\n          <div>city details</div>\n        </InfoWindow>\n      )}\n    </GoogleMap>\n  );\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\nfunction App() {\n  return (\n    <div className=\"App\" style={{ width: \"100vw\", height: \"100vh\" }}>\n      <WrappedMap\n        googleMapURL={\n          \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDnwT8wbcgGl3mz0qhqb4dJpdHl6k-D--4\"\n        }\n        loadingElement={<div style={{ height: \"100%\" }} />}\n        containerElement={<div style={{ height: \"100%\" }} />}\n        mapElement={<div style={{ height: \"100%\" }} />}\n      />\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}