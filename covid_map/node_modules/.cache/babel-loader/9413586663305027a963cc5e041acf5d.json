{"ast":null,"code":"var _jsxFileName = \"/Users/a3506/Documents/WebDev/Map/WebDev/covid_map/src/App.js\";\n//Icon author: Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { GoogleMap, withScriptjs, withGoogleMap, InfoWindow, Marker } from \"react-google-maps\";\nimport mapStyle from \"./mapStyle.js\";\nimport useSuperCluster from \"use-supercluster\";\n\nfunction Map() {\n  const [selectedCity, setSelectedCity] = useState({\n    lat: null,\n    lng: null,\n    cty: null,\n    cnt: null,\n    cnf: null,\n    rcv: null,\n    dth: null\n  });\n\n  function pass(lt, ln, ct, cn, cf, rv, dt) {\n    if (!isNaN(lt) || lt != null) {\n      if (!isNaN(ln) || ln != null) {\n        setSelectedCity({\n          lat: lt,\n          lng: ln,\n          cty: ct,\n          cnt: cn,\n          cnf: cf,\n          rcv: rv,\n          dth: dt\n        });\n      }\n    }\n  }\n\n  const [ccases, setCCases] = useState(null); //var obtain = false;\n  //const [data, setData] = useState({ cases: null });\n\n  useEffect(() => {\n    fetch(\"https://opendata.arcgis.com/datasets/bbb2e4f589ba40d692fab712ae37b9ac_1.geojson\").then(response => response.json()).then(responseJson => setCCases(responseJson) // jsonData is parsed json object received from url\n    );\n  }, [setCCases]);\n  const mapRef = useRef();\n  const [zoom, setZoom] = useState(10);\n  const [bounds, setBounds] = useState(null);\n  const points = ccases != null ? ccases.features.map(cases => ({\n    type: \"Feature\",\n    properties: {\n      cluster: false,\n      objectId: cases.properties.OBJECTID\n    },\n    geometry: {\n      type: \"Point\",\n      coordinates: [parseFloat(cases.properties.Long_), parseFloat(cases.properties.Lat)]\n    }\n  })) : [];\n  const {\n    clusters\n  } = useSuperCluster({\n    points,\n    bounds,\n    zoom,\n    options: {\n      radius: 75,\n      maxZoom: 20\n    }\n  });\n  console.log(ccases != null ? clusters : []);\n  return /*#__PURE__*/React.createElement(GoogleMap, {\n    defaultZoom: 4,\n    defaultCenter: {\n      lat: 37.0902,\n      lng: -95.7129\n    },\n    defaultOptions: {\n      styles: mapStyle\n    },\n    yesIWantToUseGoogleMapApiInternals: true,\n    onGoogleApiLoaded: ({\n      map\n    }) => {\n      mapRef.current = map;\n    },\n    onChange: ({\n      zoom,\n      bounds\n    }) => {\n      setZoom(zoom);\n      setBounds([bounds.nw.lng, bounds.se.lat, bounds.se.lng, bounds.nw.lat]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, ccases && ccases.features.map(place => /*#__PURE__*/React.createElement(Marker, {\n    key: place.properties.OBJECTID,\n    position: {\n      lat: place.properties.Lat,\n      lng: place.properties.Long_\n    },\n    onClick: () => pass(place.properties.Lat, place.properties.Long_, place.properties.Province_State, place.properties.Country_Region, place.properties.Confirmed, place.properties.Recovered, place.properties.Deaths),\n    icon: {\n      url: \"/coronavirus.svg\",\n      scaledSize: new window.google.maps.Size(Math.log(place.properties.Confirmed) * 5, Math.log(place.properties.Confirmed) * 5)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  })), selectedCity.lat != null && selectedCity.lng != null && /*#__PURE__*/React.createElement(InfoWindow, {\n    position: {\n      lat: selectedCity.lat,\n      lng: selectedCity.lng\n    },\n    onCloseClick: () => {\n      setSelectedCity({\n        lat: null,\n        lng: null,\n        cty: null,\n        cnt: null,\n        cnf: null,\n        rcv: null,\n        dth: null\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, selectedCity.cty), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, selectedCity.cnt), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, \"Confirmed: \", selectedCity.cnf, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"Recovered: \", selectedCity.rcv, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"Deaths: \", selectedCity.dth, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  })))));\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    style: {\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(WrappedMap, {\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDnwT8wbcgGl3mz0qhqb4dJpdHl6k-D--4\",\n    loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    }),\n    containerElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 27\n      }\n    }),\n    mapElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a3506/Documents/WebDev/Map/WebDev/covid_map/src/App.js"],"names":["React","useState","useEffect","useRef","GoogleMap","withScriptjs","withGoogleMap","InfoWindow","Marker","mapStyle","useSuperCluster","Map","selectedCity","setSelectedCity","lat","lng","cty","cnt","cnf","rcv","dth","pass","lt","ln","ct","cn","cf","rv","dt","isNaN","ccases","setCCases","fetch","then","response","json","responseJson","mapRef","zoom","setZoom","bounds","setBounds","points","features","map","cases","type","properties","cluster","objectId","OBJECTID","geometry","coordinates","parseFloat","Long_","Lat","clusters","options","radius","maxZoom","console","log","styles","current","nw","se","place","Province_State","Country_Region","Confirmed","Recovered","Deaths","url","scaledSize","window","google","maps","Size","Math","WrappedMap","App","width","height"],"mappings":"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","sourcesContent":["//Icon author: Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport {\n  GoogleMap,\n  withScriptjs,\n  withGoogleMap,\n  InfoWindow,\n  Marker,\n} from \"react-google-maps\";\nimport mapStyle from \"./mapStyle.js\";\nimport useSuperCluster from \"use-supercluster\";\n\nfunction Map() {\n  const [selectedCity, setSelectedCity] = useState({\n    lat: null,\n    lng: null,\n    cty: null,\n    cnt: null,\n    cnf: null,\n    rcv: null,\n    dth: null,\n  });\n\n  function pass(lt, ln, ct, cn, cf, rv, dt) {\n    if (!isNaN(lt) || lt != null) {\n      if (!isNaN(ln) || ln != null) {\n        setSelectedCity({\n          lat: lt,\n          lng: ln,\n          cty: ct,\n          cnt: cn,\n          cnf: cf,\n          rcv: rv,\n          dth: dt,\n        });\n      }\n    }\n  }\n  const [ccases, setCCases] = useState(null);\n  //var obtain = false;\n  //const [data, setData] = useState({ cases: null });\n  useEffect(() => {\n    fetch(\n      \"https://opendata.arcgis.com/datasets/bbb2e4f589ba40d692fab712ae37b9ac_1.geojson\"\n    )\n      .then((response) => response.json())\n      .then(\n        (responseJson) => setCCases(responseJson)\n        // jsonData is parsed json object received from url\n      );\n  }, [setCCases]);\n\n  const mapRef = useRef();\n  const [zoom, setZoom] = useState(10);\n  const [bounds, setBounds] = useState(null);\n  const points =\n    ccases != null\n      ? ccases.features.map((cases) => ({\n          type: \"Feature\",\n          properties: { cluster: false, objectId: cases.properties.OBJECTID },\n          geometry: {\n            type: \"Point\",\n            coordinates: [\n              parseFloat(cases.properties.Long_),\n              parseFloat(cases.properties.Lat),\n            ],\n          },\n        }))\n      : [];\n\n  const { clusters } = useSuperCluster({\n    points,\n    bounds,\n    zoom,\n    options: { radius: 75, maxZoom: 20 },\n  });\n\n  console.log(ccases != null ? clusters : []);\n  return (\n    <GoogleMap\n      defaultZoom={4}\n      defaultCenter={{ lat: 37.0902, lng: -95.7129 }}\n      defaultOptions={{ styles: mapStyle }}\n      yesIWantToUseGoogleMapApiInternals\n      onGoogleApiLoaded={({ map }) => {\n        mapRef.current = map;\n      }}\n      onChange={({ zoom, bounds }) => {\n        setZoom(zoom);\n        setBounds([bounds.nw.lng, bounds.se.lat, bounds.se.lng, bounds.nw.lat]);\n      }}\n    >\n      {ccases &&\n        ccases.features.map((place) => (\n          <Marker\n            key={place.properties.OBJECTID}\n            position={{\n              lat: place.properties.Lat,\n              lng: place.properties.Long_,\n            }}\n            onClick={() =>\n              pass(\n                place.properties.Lat,\n                place.properties.Long_,\n                place.properties.Province_State,\n                place.properties.Country_Region,\n                place.properties.Confirmed,\n                place.properties.Recovered,\n                place.properties.Deaths\n              )\n            }\n            icon={{\n              url: \"/coronavirus.svg\",\n              scaledSize: new window.google.maps.Size(\n                Math.log(place.properties.Confirmed) * 5,\n                Math.log(place.properties.Confirmed) * 5\n              ),\n            }}\n          />\n        ))}\n      {selectedCity.lat != null && selectedCity.lng != null && (\n        <InfoWindow\n          position={{\n            lat: selectedCity.lat,\n            lng: selectedCity.lng,\n          }}\n          onCloseClick={() => {\n            setSelectedCity({\n              lat: null,\n              lng: null,\n              cty: null,\n              cnt: null,\n              cnf: null,\n              rcv: null,\n              dth: null,\n            });\n          }}\n        >\n          <div>\n            <h2>{selectedCity.cty}</h2>\n            <h3>{selectedCity.cnt}</h3>\n            <p>\n              Confirmed: {selectedCity.cnf}\n              <br />\n            </p>\n            <p>\n              Recovered: {selectedCity.rcv}\n              <br />\n            </p>\n            <p>\n              Deaths: {selectedCity.dth}\n              <br />\n            </p>\n          </div>\n        </InfoWindow>\n      )}\n    </GoogleMap>\n  );\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\nfunction App() {\n  return (\n    <div className=\"App\" style={{ width: \"100vw\", height: \"100vh\" }}>\n      <WrappedMap\n        googleMapURL={\n          \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDnwT8wbcgGl3mz0qhqb4dJpdHl6k-D--4\"\n        }\n        loadingElement={<div style={{ height: \"100%\" }} />}\n        containerElement={<div style={{ height: \"100%\" }} />}\n        mapElement={<div style={{ height: \"100%\" }} />}\n      />\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}