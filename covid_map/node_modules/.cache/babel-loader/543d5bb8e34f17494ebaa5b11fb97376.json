{"ast":null,"code":"\"use strict\"; // The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst firebase = require(\"firebase-admin\");\n\nconst _ = require(\"lodash\");\n\nconst config_1 = require(\"./config\");\n\nfunction apps() {\n  if (typeof apps.singleton === 'undefined') {\n    apps.init();\n  }\n\n  return apps.singleton;\n}\n\nexports.apps = apps;\n\n(function (apps) {\n  /** @hidden */\n  apps.garbageCollectionInterval = 2 * 60 * 1000;\n  /** @hidden */\n\n  function delay(delay) {\n    return new Promise(resolve => {\n      setTimeout(resolve, delay);\n    });\n  }\n\n  apps.delay = delay;\n\n  apps.init = () => apps.singleton = new Apps();\n\n  class Apps {\n    constructor() {\n      this._refCounter = {};\n    }\n\n    _appAlive(appName) {\n      try {\n        const app = firebase.app(appName);\n        return !_.get(app, 'isDeleted_');\n      } catch (e) {\n        return false;\n      }\n    }\n\n    _destroyApp(appName) {\n      if (!this._appAlive(appName)) {\n        return;\n      }\n\n      firebase.app(appName).delete().catch(_.noop);\n    }\n\n    retain() {\n      const increment = n => {\n        return (n || 0) + 1;\n      }; // Increment counter for admin because function might use event.data.ref\n\n\n      _.update(this._refCounter, '__admin__', increment);\n    }\n\n    release() {\n      const decrement = n => {\n        return n - 1;\n      };\n\n      return delay(apps.garbageCollectionInterval).then(() => {\n        _.update(this._refCounter, '__admin__', decrement);\n\n        _.forEach(this._refCounter, (count, key) => {\n          if (count <= 0) {\n            this._destroyApp(key);\n          }\n        });\n      });\n    }\n\n    get admin() {\n      if (this._emulatedAdminApp) {\n        return this._emulatedAdminApp;\n      }\n\n      if (this._appAlive('__admin__')) {\n        return firebase.app('__admin__');\n      }\n\n      return firebase.initializeApp(this.firebaseArgs, '__admin__');\n    }\n    /**\n     * This function allows the Firebase Emulator Suite to override the FirebaseApp instance\n     * used by the Firebase Functions SDK. Developers should never call this function for\n     * other purposes.\n     */\n\n\n    setEmulatedAdminApp(app) {\n      this._emulatedAdminApp = app;\n    }\n\n    get firebaseArgs() {\n      return _.assign({}, config_1.firebaseConfig(), {\n        credential: firebase.credential.applicationDefault()\n      });\n    }\n\n  }\n\n  apps.Apps = Apps;\n})(apps = exports.apps || (exports.apps = {}));","map":{"version":3,"sources":["/Users/a3506/Documents/WebDev/Map/WebDev/covid_map/node_modules/firebase-functions/lib/apps.js"],"names":["Object","defineProperty","exports","value","firebase","require","_","config_1","apps","singleton","init","garbageCollectionInterval","delay","Promise","resolve","setTimeout","Apps","constructor","_refCounter","_appAlive","appName","app","get","e","_destroyApp","delete","catch","noop","retain","increment","n","update","release","decrement","then","forEach","count","key","admin","_emulatedAdminApp","initializeApp","firebaseArgs","setEmulatedAdminApp","assign","firebaseConfig","credential","applicationDefault"],"mappings":"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","sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst firebase = require(\"firebase-admin\");\nconst _ = require(\"lodash\");\nconst config_1 = require(\"./config\");\nfunction apps() {\n    if (typeof apps.singleton === 'undefined') {\n        apps.init();\n    }\n    return apps.singleton;\n}\nexports.apps = apps;\n(function (apps) {\n    /** @hidden */\n    apps.garbageCollectionInterval = 2 * 60 * 1000;\n    /** @hidden */\n    function delay(delay) {\n        return new Promise((resolve) => {\n            setTimeout(resolve, delay);\n        });\n    }\n    apps.delay = delay;\n    apps.init = () => (apps.singleton = new Apps());\n    class Apps {\n        constructor() {\n            this._refCounter = {};\n        }\n        _appAlive(appName) {\n            try {\n                const app = firebase.app(appName);\n                return !_.get(app, 'isDeleted_');\n            }\n            catch (e) {\n                return false;\n            }\n        }\n        _destroyApp(appName) {\n            if (!this._appAlive(appName)) {\n                return;\n            }\n            firebase\n                .app(appName)\n                .delete()\n                .catch(_.noop);\n        }\n        retain() {\n            const increment = (n) => {\n                return (n || 0) + 1;\n            };\n            // Increment counter for admin because function might use event.data.ref\n            _.update(this._refCounter, '__admin__', increment);\n        }\n        release() {\n            const decrement = (n) => {\n                return n - 1;\n            };\n            return delay(apps.garbageCollectionInterval).then(() => {\n                _.update(this._refCounter, '__admin__', decrement);\n                _.forEach(this._refCounter, (count, key) => {\n                    if (count <= 0) {\n                        this._destroyApp(key);\n                    }\n                });\n            });\n        }\n        get admin() {\n            if (this._emulatedAdminApp) {\n                return this._emulatedAdminApp;\n            }\n            if (this._appAlive('__admin__')) {\n                return firebase.app('__admin__');\n            }\n            return firebase.initializeApp(this.firebaseArgs, '__admin__');\n        }\n        /**\n         * This function allows the Firebase Emulator Suite to override the FirebaseApp instance\n         * used by the Firebase Functions SDK. Developers should never call this function for\n         * other purposes.\n         */\n        setEmulatedAdminApp(app) {\n            this._emulatedAdminApp = app;\n        }\n        get firebaseArgs() {\n            return _.assign({}, config_1.firebaseConfig(), {\n                credential: firebase.credential.applicationDefault(),\n            });\n        }\n    }\n    apps.Apps = Apps;\n})(apps = exports.apps || (exports.apps = {}));\n"]},"metadata":{},"sourceType":"script"}