{"ast":null,"code":"var _jsxFileName = \"/Users/a3506/Documents/WebDev/Map/WebDev/covid_map/src/total.js\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction Total() {\n  const [info, setInfo] = useState(null);\n  const [confirmed, setConfirmed] = useState(0);\n  const [recovered, setRecovered] = useState(0);\n  const [deaths, setDeaths] = useState(0);\n  useEffect(() => {\n    fetch(\"https://covid-19-data.p.rapidapi.com/totals?format=json\", {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"1d4a63eb5dmshedfd7c1ab6075cep1a20bfjsnee48c2d9b899\"\n      }\n    }).then(response => response.json()).then(responseJson => setInfo(responseJson)).catch(err => {\n      console.log(err);\n    });\n  }, [setInfo]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, info && info.map(x => {\n    setConfirmed(x.confirmed), setRecovered(x.recovered), setDeaths(x.deaths), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }\n    }, \"WORLD COUNT\");\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Confirmed: \", confirmed), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"recovered: \", recovered), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Deaths: \", deaths));\n}\n\nexport default Total;","map":{"version":3,"sources":["/Users/a3506/Documents/WebDev/Map/WebDev/covid_map/src/total.js"],"names":["React","useState","useEffect","Total","info","setInfo","confirmed","setConfirmed","recovered","setRecovered","deaths","setDeaths","fetch","method","headers","then","response","json","responseJson","catch","err","console","log","map","x"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,CAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAC,yDAAD,EAA4D;AAC/DC,MAAAA,MAAM,EAAE,KADuD;AAE/DC,MAAAA,OAAO,EAAE;AACP,2BAAmB,8BADZ;AAEP,0BAAkB;AAFX;AAFsD,KAA5D,CAAL,CAOGC,IAPH,CAOSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPtB,EAQGF,IARH,CAQSG,YAAD,IAAkBb,OAAO,CAACa,YAAD,CARjC,EASGC,KATH,CASUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAXH;AAYD,GAbQ,EAaN,CAACf,OAAD,CAbM,CAAT;AAcA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,IACHA,IAAI,CAACmB,GAAL,CAAUC,CAAD,IAAO;AACdjB,IAAAA,YAAY,CAACiB,CAAC,CAAClB,SAAH,CAAZ,EACEG,YAAY,CAACe,CAAC,CAAChB,SAAH,CADd,EAEEG,SAAS,CAACa,CAAC,CAACd,MAAH,CAFX,eAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHH;AAID,GALD,CAFJ,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBJ,SAAhB,CARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBE,SAAhB,CATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaE,MAAb,CAVF,CADF;AAcD;;AACD,eAAeP,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Total() {\n  const [info, setInfo] = useState(null);\n  const [confirmed, setConfirmed] = useState(0);\n  const [recovered, setRecovered] = useState(0);\n  const [deaths, setDeaths] = useState(0);\n  useEffect(() => {\n    fetch(\"https://covid-19-data.p.rapidapi.com/totals?format=json\", {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"1d4a63eb5dmshedfd7c1ab6075cep1a20bfjsnee48c2d9b899\",\n      },\n    })\n      .then((response) => response.json())\n      .then((responseJson) => setInfo(responseJson))\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [setInfo]);\n  return (\n    <div>\n      {info &&\n        info.map((x) => {\n          setConfirmed(x.confirmed),\n            setRecovered(x.recovered),\n            setDeaths(x.deaths),\n            (<h1>WORLD COUNT</h1>);\n        })}\n      <h1>Confirmed: {confirmed}</h1>\n      <h1>recovered: {recovered}</h1>\n      <h1>Deaths: {deaths}</h1>\n    </div>\n  );\n}\nexport default Total;\n"]},"metadata":{},"sourceType":"module"}