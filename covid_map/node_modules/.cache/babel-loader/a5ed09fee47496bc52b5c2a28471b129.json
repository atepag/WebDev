{"ast":null,"code":"\"use strict\"; // The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst config_1 = require(\"./config\"); // Set up for config and vars\n\n\nfunction setup() {\n  // TEMPORARY WORKAROUND (BUG 63586213):\n  // Until the Cloud Functions builder can publish FIREBASE_CONFIG, automatically provide it on import based on what\n  // we can deduce.\n  if (!process.env.FIREBASE_CONFIG) {\n    const cfg = config_1.firebaseConfig();\n\n    if (cfg) {\n      process.env.FIREBASE_CONFIG = JSON.stringify(cfg);\n    }\n  } // WORKAROUND (BUG 134416569): GCLOUD_PROJECT missing in Node 10\n\n\n  if (!process.env.GCLOUD_PROJECT && process.env.FIREBASE_CONFIG) {\n    process.env.GCLOUD_PROJECT = JSON.parse(process.env.FIREBASE_CONFIG).projectId;\n  } // If FIREBASE_CONFIG is still not found, try using GCLOUD_PROJECT to estimate\n\n\n  if (!process.env.FIREBASE_CONFIG) {\n    if (process.env.GCLOUD_PROJECT) {\n      console.warn('Warning, estimating Firebase Config based on GCLOUD_PROJECT. Initializing firebase-admin may fail');\n      process.env.FIREBASE_CONFIG = JSON.stringify({\n        databaseURL: `${process.env.DATABASE_URL}` || `https://${process.env.GCLOUD_PROJECT}.firebaseio.com`,\n        storageBucket: `${process.env.STORAGE_BUCKET_URL}` || `${process.env.GCLOUD_PROJECT}.appspot.com`,\n        projectId: process.env.GCLOUD_PROJECT\n      });\n    } else {\n      console.warn('Warning, FIREBASE_CONFIG and GCLOUD_PROJECT environment variables are missing. Initializing firebase-admin will fail');\n    }\n  }\n}\n\nexports.setup = setup;","map":{"version":3,"sources":["/Users/a3506/Documents/WebDev/Map/WebDev/covid_map/node_modules/firebase-functions/lib/setup.js"],"names":["Object","defineProperty","exports","value","config_1","require","setup","process","env","FIREBASE_CONFIG","cfg","firebaseConfig","JSON","stringify","GCLOUD_PROJECT","parse","projectId","console","warn","databaseURL","DATABASE_URL","storageBucket","STORAGE_BUCKET_URL"],"mappings":"AAAA,a,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB,C,CACA;;;AACA,SAASC,KAAT,GAAiB;AACb;AACA;AACA;AACA,MAAI,CAACC,OAAO,CAACC,GAAR,CAAYC,eAAjB,EAAkC;AAC9B,UAAMC,GAAG,GAAGN,QAAQ,CAACO,cAAT,EAAZ;;AACA,QAAID,GAAJ,EAAS;AACLH,MAAAA,OAAO,CAACC,GAAR,CAAYC,eAAZ,GAA8BG,IAAI,CAACC,SAAL,CAAeH,GAAf,CAA9B;AACH;AACJ,GATY,CAUb;;;AACA,MAAI,CAACH,OAAO,CAACC,GAAR,CAAYM,cAAb,IAA+BP,OAAO,CAACC,GAAR,CAAYC,eAA/C,EAAgE;AAC5DF,IAAAA,OAAO,CAACC,GAAR,CAAYM,cAAZ,GAA6BF,IAAI,CAACG,KAAL,CAAWR,OAAO,CAACC,GAAR,CAAYC,eAAvB,EAAwCO,SAArE;AACH,GAbY,CAcb;;;AACA,MAAI,CAACT,OAAO,CAACC,GAAR,CAAYC,eAAjB,EAAkC;AAC9B,QAAIF,OAAO,CAACC,GAAR,CAAYM,cAAhB,EAAgC;AAC5BG,MAAAA,OAAO,CAACC,IAAR,CAAa,mGAAb;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYC,eAAZ,GAA8BG,IAAI,CAACC,SAAL,CAAe;AACzCM,QAAAA,WAAW,EAAG,GAAEZ,OAAO,CAACC,GAAR,CAAYY,YAAa,EAA5B,IACR,WAAUb,OAAO,CAACC,GAAR,CAAYM,cAAe,iBAFD;AAGzCO,QAAAA,aAAa,EAAG,GAAEd,OAAO,CAACC,GAAR,CAAYc,kBAAmB,EAAlC,IACV,GAAEf,OAAO,CAACC,GAAR,CAAYM,cAAe,cAJO;AAKzCE,QAAAA,SAAS,EAAET,OAAO,CAACC,GAAR,CAAYM;AALkB,OAAf,CAA9B;AAOH,KATD,MAUK;AACDG,MAAAA,OAAO,CAACC,IAAR,CAAa,sHAAb;AACH;AACJ;AACJ;;AACDhB,OAAO,CAACI,KAAR,GAAgBA,KAAhB","sourcesContent":["\"use strict\";\n// The MIT License (MIT)\n//\n// Copyright (c) 2017 Firebase\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst config_1 = require(\"./config\");\n// Set up for config and vars\nfunction setup() {\n    // TEMPORARY WORKAROUND (BUG 63586213):\n    // Until the Cloud Functions builder can publish FIREBASE_CONFIG, automatically provide it on import based on what\n    // we can deduce.\n    if (!process.env.FIREBASE_CONFIG) {\n        const cfg = config_1.firebaseConfig();\n        if (cfg) {\n            process.env.FIREBASE_CONFIG = JSON.stringify(cfg);\n        }\n    }\n    // WORKAROUND (BUG 134416569): GCLOUD_PROJECT missing in Node 10\n    if (!process.env.GCLOUD_PROJECT && process.env.FIREBASE_CONFIG) {\n        process.env.GCLOUD_PROJECT = JSON.parse(process.env.FIREBASE_CONFIG).projectId;\n    }\n    // If FIREBASE_CONFIG is still not found, try using GCLOUD_PROJECT to estimate\n    if (!process.env.FIREBASE_CONFIG) {\n        if (process.env.GCLOUD_PROJECT) {\n            console.warn('Warning, estimating Firebase Config based on GCLOUD_PROJECT. Initializing firebase-admin may fail');\n            process.env.FIREBASE_CONFIG = JSON.stringify({\n                databaseURL: `${process.env.DATABASE_URL}` ||\n                    `https://${process.env.GCLOUD_PROJECT}.firebaseio.com`,\n                storageBucket: `${process.env.STORAGE_BUCKET_URL}` ||\n                    `${process.env.GCLOUD_PROJECT}.appspot.com`,\n                projectId: process.env.GCLOUD_PROJECT,\n            });\n        }\n        else {\n            console.warn('Warning, FIREBASE_CONFIG and GCLOUD_PROJECT environment variables are missing. Initializing firebase-admin will fail');\n        }\n    }\n}\nexports.setup = setup;\n"]},"metadata":{},"sourceType":"script"}